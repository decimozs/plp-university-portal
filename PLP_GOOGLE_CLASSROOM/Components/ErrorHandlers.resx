<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZgAAABYCAYAAADIpOFVAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAABE1JREFUeF7t3T9yE1ccB3A30EBhGqgYaaCBBjMDjWmUBhqYcahcEeUEKCeIboBP
        QHSD6ASJTpDoBIlOwOgEmc37LbszwrP8Mdonrdefz8y3cGNJLt7Xv923TwctO0qZpMxTVinrlKJK/LxI
        OUs5SQGArxqnLA6vXSvePnhQvD8+Lv55/br4cHpa/PfmTZn4+Y/nz4t3T54Uozt36sKZpQxSAOATo5Rl
        FEaUR10m35IonJ/u3aunm2n8MgAI0+GNGxculvPZKJqYaEwzAFfc7OjWrbIcmkrje/Lro0dKBuCKm8XE
        0VQS2ybu3aTfr2QArqBpTC5N5dBWYhNAep0omcPyFQHovWHcc2nzstjnEjvR0uvFdmYAroDVb8fHjYXQ
        dmJ78yCVWXrN2KUGQI+Nc18aO5/qfkw8mAlAjy12Nb1s5vD6dVMMQI+V916aCiB3qq3LHsIE6KnxONO2
        5K8lHuJMr7/8+DYA6Jv576NRYwHsItVlMluWAXpoue1xMNskNhek9/D441sBoE9W/+7g2ZfP5eTu3SgY
        x/sD9FDjwr+rVAdhxrH+8ZUAIiJy8cQ/6Z08gqsLE4yIiGyfeLawU0Wz14KJ75o5OzsrFouFiIh8Z8bj
        cV0ynTpQeO+7yNbrdQHAdpbL5eYk0wnTOHyyafHPnThYczgcVn8aALY1nU7rkunEFDOKy1RNBZA77589
        K8c6ANoxn8/rgomb/52w3sezMFFsce0QgHbEmprW9E4VzHR8/35jCeTKny9euDwG0LIuFkwc1bL+6+XL
        xjLIkXiCfzabVX8SANrQxYIJk13di3n39KnpBSCDrhZMWLx9+LCxFNpK7Bwb3L5drFar6s8BQFu6XDBx
        qWwV39PSVA7bpiyXmzfLXQ4AtK/LBROGKa2XTNzfiXKJp/YByKPrBROiZJaxsyymjqbCuEjinktcFnNT
        HyCvy1AwtekwTR1REB9OTxvL40uJrcixcWA0GrnnArADl6lgQkwzsyiamGiiNL5UNn+/elV+134Uy9HR
        kakFYIcuW8HUomjiDcchauVzLOV0UiV+joMrB4NBMZlMyg8JwG5d1oI5L77m+IeUX1LKScWpyAD71ZeC
        qY1STCwAHaBgAMhCwQCQhYIBIAsFA0AWCgaALBQMAFkoGACyUDAAZKFgAMhCwQCQhYIBIAsFA0AWCgaA
        LBQMAFkoGACyUDAAZKFgAMhCwQCQhYIBIAsFA0AWCgaALBQMAFkoGACyUDAAZKFgAMhCwQCQhYIBIAsF
        A0AWCgaALBQMAFn0smBms1n18QDYl42COYkF+rI7TCnG43H18QDYl1iLY01OGcQC3QeLFFMMwB5tTC/z
        WJj7YpiySinbcz6flx9URETyJ9bcyWRSl0usxb2ZXmpRMrOU+kOKiMhuE1eTelcum6Jofkz5WUREdpJY
        c2PtBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAcH/wNpxy1OgaJUMAAAAABJRU5ErkJggg==
</value>
  </data>
</root>